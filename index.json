[{"content":"0.查阅说明 大家好👋，因为本人属实很不喜欢下载很多应用程序在电脑上，因此在网络上找到了另外一种解决解压rar压缩包的方法（但是网络上的方法并不是完全适用，因此根据我的电脑做了最新的更新），超快哈哈哈！请注意⚠️该方法目前只适用于Macbook IOS系统，你只需要打开电脑==终端==即可！然后按照我以下超级超级详细的步骤来就可以！努力实现喂饭教学🍚\n1. 打开终端 使用Command+空格键然后搜索终端就可以快速打开\n2.输入命令 输入以下命令并且提示成功下载\n1 brew install --cask lunar 请注意⚠️因为在前期的Git实操文章中我已经下载了brew,因此我这里直接可以使用，如果没有下载的朋友可以考虑官网搜索下载，也十分便捷。\n//截图如下👇 3. 输入命令 输入以下命令并提示运行成功，有☑️的符号提示\n1 brew install unar //截图如下👇 4. 开始解压！ 输入以下命令并提示运行成功，解压成功会有提示Successfully，到这里你就已经完成了所有的工作并且解压完成，压缩文件直接放在来你的根目录里。\n1 unar 文件路径 🎉以后再要解压就可以直接在终端输入：==unar+你要解压的文件路径名==即可！🎉\n//截图如下👇 ","permalink":"https://Graceoooffice.github.io/posts/mac-operaion/mac01/","summary":"0.查阅说明 大家好👋，因为本人属实很不喜欢下载很多应用程序在电脑上，因此在网络上找到了另外一种解决解压rar压缩包的方法（但是网络上的方法并","title":"【Mac-rar文件解压】Mac系统如何打开rar压缩包文件_无需下载应用程序的快捷4步操作法"},{"content":"创建repo在你的GitHub账户 我将repo命名为blog_comments，你也可以自行命名👋 打开utterance 点击here,找到Configuration部分，根据这个步骤来进行操作，此时你已经满足了第一条，接下要点击第二条的utterances app这个蓝色的文本，选择下面图片的内容👇 config基础配置 在你的站点文件配置config里修改一下内容为👇\n请注意❗️第6行的repo=XXX请填写在你上面图片里写的repo名字\n1 2 3 4 5 6 7 8 comments: enabled: true provider: utterances utterances: repo: Graceoooffice/blog_comments issueTerm: pathname label: utterances Blog每篇配置评论 在你想要增加评论的blog文章里在你想要添加评论的位置增加下面的代码👇\n请注意❗️第二行的repo=“XXX”请填写在你上面图片里写的repo名字\n1 2 3 4 5 6 7 \u0026lt;script src=\u0026#34;https://utteranc.es/client.js\u0026#34; repo=\u0026#34;Graceoooffice/blog_comments\u0026#34; issue-term=\u0026#34;pathname\u0026#34; theme=\u0026#34;github-light\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 🎉 此时你已经完成了所有的操作，快到你的blog里查看吧! 🎉 ","permalink":"https://Graceoooffice.github.io/posts/self-study-plan-series/ss0313/","summary":"创建repo在你的GitHub账户 我将repo命名为blog_comments，你也可以自行命名👋 打开utterance 点击here,找到C","title":"【自学计划系列03】使用Hugo等配置增添网站功能"},{"content":"在Python中运行该代码是报错——getaddrinfo failed\n1 2 import nltk download nltk 解决方法：\n方法一：官方查找文件下载 1.去官网下载文件 https://gitcode.net/mirrors/nltk/nltk_data?utm_source=csdn_github_accelerator 2.下载文件后解压，解压后文件如图所示 3.在使用nltk中 from nltk.corpus import brown brown.categories()报错后会出现下述的报错信息，关注红框里的路劲 4.在红框中的路劲中选择任意一个，注意：nltk_data是没有的，需要自行创建这个文件，我选择在E盘下创建这个文件夹。 5.将官网下载后解压文件中packages下的子文件夹全部复制到这个刚创建的nltk_data文件夹下 注意： 不是将packages文件下复制到创建的nltk_data，而是packages下的所有子文件夹。以corpora为例，路径是D:\\Anaconda\\share\\nltk_data\\corpora 而不是D:\\Anaconda\\share\\nltk_data\\packages\\corpora 6.由于报错信息提示 因此在E盘中的nltk_data中找到该文件，并将其解压 在此十分感谢该参考链接： 的具体指导操作https://blog.csdn.net/weixin_42038760/article/details/112911555\n方法二：修改host 关于这一步没有进行具体实践，具体操作步骤可以参考链接: 参考链接.\n","permalink":"https://Graceoooffice.github.io/posts/error-fitting/error01/","summary":"在Python中运行该代码是报错——getaddrinfo failed 1 2 import nltk download nltk 解决方法： 方法一：官方查找文件下载 1.去官网下载文件 https://gitcode.net/mirrors/nltk/nltk_data?utm_source=csdn_github_accelerator 2.下载文件后","title":"【download nltk】使用download nltk报错，下载解压语料库"},{"content":"tips： 请在未打开jupyter的情况下进行修改\nstep1：打开终端 command+空格——打开搜索🔍——输入“终端“\nstep2：获得更改默认工作路径的文件路径 终端输入下面的命令行，复制输出结果的路径 输出结果路径：/Users/hchen/.jupyter/jupyter_notebook_config.py step3：找到该路径文件 finder下使用Command+Shift+G 可以前往任何文件夹，输入刚才复制的路径：/Users/hchen/.jupyter/jupyter_notebook_config.py step4：打开该文件，找到修改路径位置 使用command+F，来进行搜索在下面的代码块\n1 2 ## The directory to use for notebooks and kernels. #c.NotebookApp.notebook_dir = \u0026#39;\u0026#39; 修改为\n1 2 ## The directory to use for notebooks and kernels. c.NotebookApp.notebook_dir = \u0026#39;/Users/desktop‘ 即删除第二行首个#，并在后面填入想要修改的路径名字\nstep5：关闭该文件，成功！ 关闭该文件，并重新打开jupyter查看路径是否已进行更改。\n","permalink":"https://Graceoooffice.github.io/posts/mac-operaion/mac02/","summary":"tips： 请在未打开jupyter的情况下进行修改 step1：打开终端 command+空格——打开搜索🔍——输入“终端“ step2：获得更改","title":"【Mac-jupyter】在Mac设备中更改jupyter的默认工作路径"},{"content":"阅读前提 👋大家好，我已经试图做到从我开始的流程开始介绍，然后一步步的操作讲解，但是由于在了解GIt操作时遇到了很多问题，因此我在解决操作这些问题的时候，促使我的整理流程不够十分顺利（只能说是这个饭没有盛满了😢），但是我还是希望你能从这篇中收获的你想要的东西\n摘要：什么是Github？ 当我们想要使用一个工具的时候我们还需要使用这个工具能做些什么，因此当我Google搜索了相关信息后得到了一个最好的解释⬇️\n相关概念 只有在了解好所有基本的一个概念才能更好的掌握起运行原理，因此本文将根据重点来树立相关的概念知识，在我们后续所要运行的Git/GitHub/Vscode工具中。\nGit 参考链接03中具有完整的解释，或者直接点击这里进入 分布式版本控制系统（该部分在我前几章博客中有提及到），Git的工作流程是使用者先从仓库（Repository）中下载到工作目录，修改完后再提交到仓库中。==个人觉得==有点类似于取回来在本地（pull）然后修改了在放回去（checkout）\n工作流程 当开发者要建立一个开发项目时，要为这个项目建立一个目录，以及使用git init指令建立一个这个项目的储存库（Repository )。这个目录可称为工作目录（Working Directory），开发项目所有的档案都储存在这个目录下，而执行与项目相关的Git指令，也都是在工作目录下执行。 Git还会在.git目录下建立一个名称为index的索引档案，作为记录专案所有档案的处理状态，例如是储存在本机储存库中的已提交（committed）档案，或是已变更但尚未提交到本机储存库的已修改（modified）档案，或也有一种状态是在已修改档案中标记出要作为提交到下一版本用的已暂存（staged）档案。这个索引档是用来管理档案修改以及是否要提交到储存库的记录。 分支Brach、Merge 一般会将稳定的版本作为主干，其他变动或则是正在==开发的==版本则作为分支，当开发状态完成后在添加进主支里来保证整体代码的完整不易破坏。 克隆Clone和Fork 复制（Clone）指令是把在远端的仓库里的所有內容复制到本地，建立起本地的仓库和工作目录，而（Fork）則是把別人项目的远程仓库里的內容复制一份到自己的远程仓库里。因此在我们fork完GitHub里他人项目后我们无法直接使用，因为项目被放置在我们自己的远程仓库里，如想要运行修改项目代码，可以做的一个是直接下载download，另一个是可以直接使用git里的==clone到我们的本地==上（该部分使用vs code十分方便，后续会进行提及如何实现）\n资料同步指令Push、Pull、Pull Request -（Push）指令，可以把自己目前本机本地的仓库内容上传到==远程仓库==（我愿类比为网盘的概念）\n（Pull）指令則把远程仓库（网盘）的下载到我们的本地，并将远程分支合并到本地的分支。注意Pull並不像Clone指令会下載完整项目各版本內容。 开发者使用Pull获得其他人开放权限的网盘程序，也可以将自己修改的代码程序push到别人的网盘里。这两个操作可以实现开发共享代码 而pull Request是主动的要求第三方开发者来进入自己开发的程序，将本地仓库上的代码程序放在对方的仓库中，。例如A成員可通过Pull Request要求B成員，將A成員修改後的程序合并入B成員的开发项目中。 GitHub 其使用了Git的核心来完成，是一个线上协作平台，使用议题（Issue）、新开分支（Branch）、维基（Wiki）、拉取要求（Pull Request）等功能，开发者能更有效率的进行版本控制，并且在线上合作、讨论专案及透过GitHub分享程式码。 点击该链接有具体的案例流程，该文章不做重复阐述，仅提出部分注意点\n（这里有点类似于kaggle上保存文件后会产生多个版本，而不是运行完自动保存关闭） 没提交一次会产生一次版本，多次提交commit后才一次发布Push到我们的Github云端仓库里，而在我们提及commit时会要求输入相关信息来说明版本做了哪些变动，以此来记录变更。 使用Git (结合VScode快捷实现) 我们已经大致上了解了什么是Git以及GitHub的一个基本使用概要。那我们具体应该如何使用我们的网盘呢？ 下面我们来进入实操并且我们帮助你解决两个重要的问题：\n==如何上传我们的项目（代码）？== ==如何下载别人的项目（代码）并在本地运行修改？== 1.安装 注意此文章是Mac限定版，参考here使用 step:\nGoogle搜索关键词git mac download 根据官网页面完成brew安装 使用brew 安装git 在终端输入查看版本来确认是否安装成功： git \u0026ndash;version 2.创建ssh key、配置git 1、设置username和email（github每次commit都会记录他们）\n1 2 git config --global user.name \u0026#34;your_name\u0026#34; git config --global user.email \u0026#34;xxxxxx@qq.com\u0026#34; 2、通过终端命令创建ssh key\n1 ssh-keygen -t rsa -C \u0026#34;xxxx@qq.com\u0026#34; 3.完成上述操作后会要求你输入你设定的密码，并且储存在相关文件中 4.登入你的GitHub账户，添加ssh key，点击Settings，点击New SSH key， 添加key。\n添加的KEY使用在终端中运行下面这行代码获得⬇️ -注意我已经进入到我存放key目录下了） 1 (base) h@HdeMacBook-Air-2 .ssh % cat id_rsa.pub 接着使用下面这行代码来进行配置⬇️ 1 (base) h@HdeMacBook-Air-2 .ssh % ssh -T git@github.com P1:如何上传我们的项目（代码）？ 事实上，我花费了一些时间来查看相关网络资料来试图系统性的来了解整体的步骤，但是均失败且不太易解决，因此选择了Youtube上这个方法暂时代替我想实现该功能的需求，点击here可以查看该视频,十分详细，如后续有更好的学习再进行补充\n打开我们的vs code文件夹，注意这个文件下就是你想要上传的项目文件夹⬇️ 请确保你的VScode已经登入到你的GitHub账户里 点击这个图标，会有两个选择，我们选择第二个 事实上，我发现有时候不是一定会出现这个选择界面，因此我们可以使用👇这个方法来实现\n点击完进行选择，根据你的需求来选，下图只是其中一个选择页面 🎉 ==此时就完成了我们所有的操作，你可以去你的GitHub账户下仓库里找找看有没有！== 🎉 如何下载别人的项目（代码）并在本地运行修改？ 首先我们先fork别人的项目到自己的仓库里 接着你会在自己的账户仓库里找到他，这很好。请复制这个信息 请先在本地创建文件夹来放置你后面clone下来的文件，然后我们需要在终端里运行这个命令，红色框里是你复制的内容 1 git clone https://github.com/Graceoooffice/Face_recognition.git 接着就可以使用VScode的打开文件夹来对其进行修改 🎉 ==此时你已经完成了所有的操作== 🎉 补充知识点 可能会涉及到的其他一些技能来帮助你更快的实现 mac 终端一些简单操作指令\ncd.. 返回上一级目录 cd myfolder 进入myfolder目录 mkdir test 新建目录 rm -rf test 删除目录(适用于空的目录) pwd 显示当前目前 vs code的简单操作指令：如何打开markdown（右键文件-打开预览）\n参考资料 再次感谢网友们发出的学习攻略，个人根据资料和自身情况完成具体的一些实操过程 01MAC上Git安装与GitHub基本使用 02在 vscode 中使用 Git ：拉取、提交、克隆 03 Git里常见的名词解释，十分具体但是繁体字 04同步你的Fork仓库\n","permalink":"https://Graceoooffice.github.io/posts/self-study-plan-series/ss02/","summary":"阅读前提 👋大家好，我已经试图做到从我开始的流程开始介绍，然后一步步的操作讲解，但是由于在了解GIt操作时遇到了很多问题，因此我在解决操作这些","title":"【自学计划系列01】初学者从0开始的Git/GitHubs详细使用喂饭学习笔记—Mac限定版结合VScode操作"},{"content":"1.VScode failed to start the kernel 无法连接kernel导致的报错 可能的报错的原因：\n检查环境配置和版本问题 连接kernel选择有问题 我首先根据第二个可能的问题进行了调整获得了👇的解决方法。 【shift+command+P】快捷键打开命令窗口，如下，输入select notebook kernel 选择完会弹出👇这个 由于在一开始的时候他给我配置的是第一个内核导致我无法进行链接来运行我的代码，因此我切换到了第二个（conda Env），此时就可以成功链接且运行代码。 ","permalink":"https://Graceoooffice.github.io/posts/self-study-plan-series/ss01/","summary":"1.VScode failed to start the kernel 无法连接kernel导致的报错 可能的报错的原因： 检查环境配置和版本问题 连接kernel选择有问题 我首先根据第二个可能的问题进行了","title":"【自学计划系列02】VScode操作问题汇总_实际案例结合python和Jupyter报错问题Mac限定版"},{"content":"一、查询应该返回 null —如果不存在，查询应该返回 null 题目描述：获取并返回 Employee 表中第二高的薪水 。如果不存在第二高的薪水，查询应该返回 null 1.1 iFnull（）的使用 IFNULL(expr1,expr2)的用法：\n假如expr1 不为 NULL，则 IFNULL() 的返回值为 expr1; 否则其返回值为 expr2。IFNULL()的返回值是数字或是字符串，具体情况取决于其所使用的语境。\nmysql\u0026gt; SELECT IFNULL(1,0); -\u0026gt; 1 mysql\u0026gt; SELECT IFNULL(NULL,10); -\u0026gt; 10 mysql\u0026gt; SELECT IFNULL(1/0,10); -\u0026gt; 10 mysql\u0026gt; SELECT IFNULL(1/0,\u0026lsquo;yes\u0026rsquo;);\n-\u0026gt; \u0026lsquo;yes\u0026rsquo;\nIFNULL(expr1,expr2)的默认结果值为两个表达式中更加“通用”的一个，顺序为STRING、 REAL或INTEGER。假设一个基于表达式的表的情况或MySQL必须在内存储器中储存一个临时表中IFNULL()的返回值： CREATE TABLE tmp SELECT IFNULL(1,\u0026rsquo;test\u0026rsquo;) AS test； 在这个例子中，测试列的类型为 CHAR(4)。\n1.2 完整代码 1 2 3 4 5 6 7 8 9 10 11 select ifNull( (select distinct a.salary as SecondHighestSalary from (select id ,salary ,dense_rank() over(order by salary desc) as rn from Employee ) a where a.rn=2) ,null) as SecondHighestSalary 二、返回NUll的对象—找出所有从不订购任何东西的客户 题目描述：某网站包含两个表，Customers 表和 Orders 表。编写一个 SQL 查询，找出所有从不订购任何东西的客户\n1.1 isnull（）的使用 isnull(expr) 的用法： 如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。 mysql\u0026gt; select isnull(1+1); -\u0026gt; 0 mysql\u0026gt; select isnull(1/0); -\u0026gt; 1 使用= 的null 值对比通常是错误的。\nisnull() 函数同 is null比较操作符具有一些相同的特性。请参见有关is null 的说明\n1.2 完整代码 1 2 3 4 5 6 select name from customers left join orders on customers.id = orders.customerId where isnull(customerId); 使用where not in\n1 2 3 select name from customers where id not in ( select customerId from orders ); 三、参考链接 3.2 NULL（）的使用 NULLIF(expr1,expr2) 的用法：\n如果expr1 = expr2 成立，那么返回值为NULL，否则返回值为 expr1。这和CASE WHEN expr1 = expr2 THEN NULL ELSE expr1 END相同。 mysql\u0026gt; SELECT NULLIF(1,1);\n-\u0026gt; NULL mysql\u0026gt; SELECT NULLIF(1,2); -\u0026gt; 1 如果参数不相等，则 MySQL 两次求得的值为 expr1\nsql中ifnull(),isnull(),nullif()的使用方法 https://blog.csdn.net/qq_39889961/article/details/85872342\n","permalink":"https://Graceoooffice.github.io/posts/sql-learing/sql01/","summary":"一、查询应该返回 null —如果不存在，查询应该返回 null 题目描述：获取并返回 Employee 表中第二高的薪水 。如果不存在第二高的薪水，查询应该返回 null 1.1 iFnull（","title":"SQL中案例实例01—ifnull(),isnull(),nullif()的使用方法"},{"content":"题目描述：查找收入比经理高的员工。 下图表头的含义解释-雇员的ID、姓名、工资和经理的ID。 一、解题思路一 一、将是经理和不是经理的信息分开为两张表，然后以雇员的工资数据为主，左连接经理的工资，用case when 对比来返回雇员信息。\n1.1 关于NULL的使用问题 【问题一】这样对比的话，出现一对多的数据对比，表连接有问题。 【问题二】在筛选出雇员信息，使用 select row_number() over(order by salary desc) as rn ,name ,salary from employee where id not in (select managerid from employee) 报错，在最后Id not in 中由于managerid有null值时无法有效进行判断，该代码返回值为null 【问题三】null无法直接判断，即name != null 无法成功 【问题四】select managerid from employee where isnull(managerid) 返回的为是空null所对应的行数据\n二、解题思路二 二、由于表employee结构中，最后一行的managerid和整表关联弱，要用独立思维去使用该列数据。 上图为【select * from Employee as a join Employee as b on a.managerId = b.id】两个表关联后的表\n2.1完整代码如下 1 2 3 4 5 6 select a.name as Employee from Employee as a join Employee as b on a.managerId = b.id where a.salary \u0026gt; b.salary 另一实现代码如下，不使用join连接\n1 2 3 4 5 6 7 select e1.Name AS Employee FROM Employee e1, Employee e2 where e1.ManagerId = e2.Id AND e1.Salary \u0026gt; e2.Salary ","permalink":"https://Graceoooffice.github.io/posts/sql-learing/sql02/","summary":"题目描述：查找收入比经理高的员工。 下图表头的含义解释-雇员的ID、姓名、工资和经理的ID。 一、解题思路一 一、将是经理和不是经理的信息分开为两","title":"SQL中案例实例02—查找收入比经理高的员工，两表连接列比较"},{"content":" 👉2023.03.12\n在昨天完成了基本的网络搭建，基本实现了所有按钮的功能，目前还有残留的工程未完成\n1.修复Blog中md文件由于迁移导致的图片无法展示 2.Projects内容为进行修改 3.关于Tag的具体实现分类还未探索实现 4.Resume下如何进行更好的分类 👉2023.03.13\n实现了utterance配置blog评论\nSelf-Study hugo配置到public时会多生成大写的目录文件夹（Bug未修复） ","permalink":"https://Graceoooffice.github.io/log/","summary":"👉2023.03.12 在昨天完成了基本的网络搭建，基本实现了所有按钮的功能，目前还有残留的工程未完成 1.修复Blog中md文件由于迁移导致的","title":"🍔日志"}]